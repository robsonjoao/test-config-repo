info:
  id: ${spring.application.name}

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

security:  
  oauth2:
    resource:
      userInfoUri: http://localhost:9999/uaa/user    

management:
  context-path: /management  

---
# For deployment in Docker containers      
spring:
  profiles: docker  
  boot:
    admin:
      url: http://10.254.10.15:5050
      client:
        prefer-ip: true

server:
  port: 80

security:  
  oauth2:
    resource:
      userInfoUri: http://10.254.10.11:80/uaa/user    
  
eureka:
  client:
    registerWithEureka: false
    fetchRegistry: false

ribbon:
  eureka:
   enabled: false
   
   
   

#Lista de Servicos############################      
auth-service:
  ribbon:
    listOfServers: http://10.254.10.11

user-admin-service:
  ribbon:
    listOfServers: http://10.254.10.12

provincia-service:
  ribbon:
    listOfServers: http://10.254.11.10
##############################################



---
# For deployment in OpenShift
spring:
  profiles: oc  
  boot:
    admin:
      url: http://boot-admin:8080
      client:
        prefer-ip: true

server:
  port: 8080

security:  
  oauth2:
    resource:
      userInfoUri: http://auth-service:8080/uaa/user    
  
eureka:
  client:
    registerWithEureka: false
    fetchRegistry: false

ribbon:
  eureka:
   enabled: false
   
   
   

#Lista de Servicos############################      
auth-service:
  ribbon:
    listOfServers: http://auth-service:8080

user-admin-service:
  ribbon:
    listOfServers: http://user-admin-service:8080

provincia-service:
  ribbon:
    listOfServers: http://provincia-service:8080
##############################################


